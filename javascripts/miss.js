// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  (function(document) {
    var Miss, backdrop, colorConvert, extend, fullHex, miss, prepHex;
    miss = function(selector, options) {
      var defaults, el, els, i, sel, _i, _len, _results;
      if (selector == null) {
        selector = null;
      }
      if (options == null) {
        options = null;
      }
      miss.missies = miss.missies || {};
      if (!miss.global) {
        miss.settings();
      }
      defaults = {
        order: 'series',
        background_color: '#000',
        font_color: '#000',
        z_index: 2100
      };
      if (selector) {
        els = document.querySelectorAll.call(document, selector);
        sel = selector.replace(/\./g, '_class_').replace(/\#/g, '_id_').replace(/[^a-zA-Z0-9]/g, '_');
        _results = [];
        for (i = _i = 0, _len = els.length; _i < _len; i = ++_i) {
          el = els[i];
          _results.push(miss.missies[sel + '_' + i] = new Miss(el, i, extend(defaults, options)));
        }
        return _results;
      }
    };
    Miss = (function() {
      function Miss(el, i, opts) {
        this.logElement = __bind(this.logElement, this);
        this.el = el;
        this.index = i;
        this.opts = extend(opts, miss.global);
        backdrop(1, opts.backdrop_color, opts.backdrop_opacity);
      }

      Miss.prototype.logElement = function() {
        return console.log(this.el.innerHTML);
      };

      return Miss;

    })();
    extend = function(objA, objB) {
      var attr;
      for (attr in objB) {
        objA[attr] = objB[attr];
      }
      return objA;
    };
    colorConvert = function(hex) {
      return {
        red: parseInt((prepHex(hex)).substring(0, 2), 16),
        green: parseInt((prepHex(hex)).substring(2, 4), 16),
        blue: parseInt((prepHex(hex)).substring(4, 6), 16)
      };
    };
    prepHex = function(hex) {
      hex = (hex.charAt(0) === "#" ? hex.split("#")[1] : hex);
      if (hex.length === 3) {
        return hex + hex;
      } else {
        return hex;
      }
    };
    fullHex = function(hex) {
      return "#" + prepHex(hex);
    };
    backdrop = function(toggle, color, opacity) {
      var bd, rgb;
      if (color == null) {
        color = null;
      }
      if (opacity == null) {
        opacity = null;
      }
      if (!document.getElementById('miss_bd')) {
        rgb = colorConvert(color);
        bd = document.createElement("div");
        bd.id = 'miss_bd';
        bd.style.backgroundColor = "rgba(" + rgb.red + ", " + rgb.green + ", " + rgb.blue + ", " + opacity + ")";
        bd.style.position = 'fixed';
        bd.style.top = 0;
        bd.style.right = 0;
        bd.style.bottom = 0;
        bd.style.left = 0;
        bd.style.display = 'none';
        document.body.appendChild(bd);
      }
      bd = document.getElementById('miss_bd');
      if (bd.style.display === 'none' && toggle === 1) {
        return bd.style.display = "";
      } else {
        return bd.style.display = 'none';
      }
    };
    miss.settings = function(set) {
      return miss.global = extend({
        theme: null,
        trigger: null,
        key_on: null,
        key_off: null,
        key_hover: null,
        backdrop_color: '#000',
        backdrop_opacity: 0.3
      }, set);
    };
    return this.miss = miss;
  })(document);

}).call(this);
